{
  "version": 3,
  "sources": ["../node_modules/@jyostudio/overload/src/overload.js", "../src/enum.js"],
  "sourcesContent": ["/**\r\n * \u7C7B\u578B\u540D\u79F0\u6620\u5C04\u8868\r\n * @type {Map<String, String>}\r\n */\r\nconst TYPE_NAMES = new Map([\r\n  [\"number\", \"Number\"],\r\n  [\"string\", \"String\"],\r\n  [\"boolean\", \"Boolean\"],\r\n  [\"symbol\", \"Symbol\"],\r\n  [\"bigint\", \"BigInt\"],\r\n  [\"undefined\", \"(undefined)\"],\r\n]);\r\n\r\n/**\r\n * \u5185\u90E8\u7C7B\u578B\u7236\u7EA7\u6807\u5FD7\r\n */\r\nconst INNER_TYPE_FATHER = \"##INNER_TYPE##\";\r\n\r\n/**\r\n * \u5185\u90E8\u7C7B\u578B\u5B50\u7EA7\u6807\u5FD7\r\n */\r\nconst INNER_TYPE_SON = \"@@INNER_TYPE@@\";\r\n\r\n/**\r\n * \u5339\u914D\u7C7B\u578B\r\n * @param {any} param - \u4F20\u5165\u7684\u53C2\u6570\r\n * @param {any} type - \u671F\u671B\u7684\u7C7B\u578B\r\n * @returns {Boolean} \u662F\u5426\u5339\u914D\r\n */\r\nfunction matchType(param, type) {\r\n  if (Array.isArray(type)) {\r\n    for (let i = 0; i < type.length; i++) {\r\n      if (matchType(param, type[i])) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  if (typeof type !== \"function\") {\r\n    if (\r\n      type === \"*\" && param !== null ||\r\n      type === \"...\" ||\r\n      (type === null && param === null) ||\r\n      type === typeof param\r\n    )\r\n      return true;\r\n    return false;\r\n  }\r\n\r\n  switch (typeof param) {\r\n    case \"function\":\r\n    case \"object\":\r\n      break;\r\n    default:\r\n      param = Object(param);\r\n      break;\r\n  }\r\n\r\n  if (param?.[INNER_TYPE_SON]) {\r\n    return param[INNER_TYPE_SON] === type?.[INNER_TYPE_FATHER];\r\n  }\r\n\r\n  if (param instanceof type || param === type) return true;\r\n\r\n  return false;\r\n}\r\n\r\n/**\r\n * \u83B7\u53D6\u7C7B\u578B\u540D\u79F0\r\n * @param {any} param - \u4F20\u5165\u7684\u53C2\u6570\r\n * @returns {String} \u7C7B\u578B\u540D\u79F0\r\n */\r\nfunction getTypeName(param) {\r\n  if (param === null) return \"null\";\r\n\r\n  if (param === \"*\") return \"(any)\";\r\n\r\n  const paramType = typeof param;\r\n\r\n  if (paramType in TYPE_NAMES) return TYPE_NAMES.get(paramType);\r\n\r\n  let className = (param.name || param.constructor.name || \"(unknown)\").split(\" \").pop();\r\n\r\n  [INNER_TYPE_FATHER, INNER_TYPE_SON].forEach(v => {\r\n    if (param?.[v]) {\r\n      className += `<${getTypeName(param?.[v])}>`;\r\n    }\r\n  });\r\n\r\n  if (paramType === \"function\" && className === \"anonymous\")\r\n    return \"(anonymous)\";\r\n\r\n  return className;\r\n}\r\n\r\n/**\r\n * \u8FD4\u56DE\u4E00\u4E2A\u91CD\u8F7D\u51FD\u6570\r\n * @param {Array<any>} [defaultTypes] - \u9ED8\u8BA4\u53C2\u6570\u7C7B\u578B\u5217\u8868\r\n * @param {Function} [defaultFn] - \u9ED8\u8BA4\u8981\u8C03\u7528\u7684\u51FD\u6570\r\n * @returns {Function} \u91CD\u8F7D\u51FD\u6570\r\n */\r\nexport default function (defaultTypes, defaultFn) {\r\n  const TABLE = new Map();\r\n  let anyFn = null;\r\n\r\n  /**\r\n   * \u8C03\u7528\u515C\u5E95\u51FD\u6570\r\n   * @param  {...any} args - \u53C2\u6570\u5217\u8868\r\n   * @returns {any} \u8FD4\u56DE\u503C\r\n   */\r\n  function runAny(...args) {\r\n    if (anyFn) return anyFn.apply(this, args);\r\n\r\n    throwStackInfo(new Error(), args);\r\n  }\r\n\r\n  /**\r\n   * \u629B\u51FA\u5806\u6808\u4FE1\u606F\r\n   * @param {Error} err - \u9519\u8BEF\u5BF9\u8C61\r\n   * @param {...any} args - \u53C2\u6570\u5217\u8868\r\n   * @throws {Error}\r\n   */\r\n  function throwStackInfo(err, args) {\r\n    const stackList = err.stack.split(\"\\n\").splice(3);\r\n    let errorMessage = \"\";\r\n    let formattedStack = \"\\n\";\r\n    let errorMethodName = \"\";\r\n\r\n    stackList.forEach((stackLine, index, arr) => {\r\n      const parts = stackLine.trim().split(\" \");\r\n      const fullMethodName = parts.length === 3 ? parts[1] : \"(anonymous)\";\r\n      const methodName = fullMethodName.split(\".\").pop();\r\n\r\n      arr[index] = {\r\n        fullMethodName,\r\n        methodName,\r\n        link: parts.length === 3 ? parts[2] : parts[1],\r\n      };\r\n\r\n      if (!index) {\r\n        errorMethodName = methodName;\r\n      } else {\r\n        formattedStack += `${methodName}\\t${arr[index].link}\\n`;\r\n      }\r\n    });\r\n\r\n    const matchingTypes = Array.from(TABLE.keys()).find(\r\n      (types) => types.length === args.length\r\n    );\r\n\r\n    if (!matchingTypes) {\r\n      errorMessage += `The function \"${errorMethodName}\" does not have an overload that takes ${args.length} arguments.`;\r\n      errorMessage += formattedStack;\r\n      throw new Error(errorMessage);\r\n    }\r\n\r\n    let hasError = false;\r\n    matchingTypes.forEach((expectedType, i) => {\r\n      if (!matchType(args[i], expectedType)) {\r\n        const expectedTypeNames = Array.isArray(expectedType)\r\n          ? expectedType.map(getTypeName).join(\"\u3001\")\r\n          : getTypeName(expectedType);\r\n\r\n        errorMessage += `${hasError ? \"\\n\" : \"\"}Argument ${i + 1\r\n          }: Cannot convert from \"${getTypeName(\r\n            args[i]\r\n          )}\" to \"${expectedTypeNames}\".`;\r\n        hasError = true;\r\n      }\r\n    });\r\n\r\n    if (hasError) {\r\n      errorMessage = `Error calling function \"${errorMethodName}\"\\n${errorMessage}`;\r\n      errorMessage += formattedStack;\r\n      throw new Error(errorMessage);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * \u91CD\u8F7D\u51FD\u6570\r\n   * @param {...any} params - \u53C2\u6570\u5217\u8868\r\n   * @returns {any} \u8FD4\u56DE\u503C\r\n   */\r\n  function overload(...params) {\r\n    if (!TABLE.size) return runAny.apply(this, params);\r\n\r\n    const SAME_LENGTH_MATCH = Array.from(TABLE.keys()).filter(\r\n      (v) => {\r\n        return v.length === params.length || v[v.length - 1] === \"...\";\r\n      }\r\n    );\r\n\r\n    loop: for (let i = 0; i < SAME_LENGTH_MATCH.length; i++) {\r\n      const types = SAME_LENGTH_MATCH[i];\r\n\r\n      if (typeof types[0] !== \"undefined\" && types[0] !== \"...\" && params.length === 0) {\r\n        continue loop;\r\n      }\r\n\r\n      for (let j = 0; j < params.length; j++) {\r\n        if (!matchType(params[j], types[j] || types[types.length - 1])) continue loop;\r\n      }\r\n\r\n      return TABLE.get(types).apply(this, params);\r\n    }\r\n\r\n    return runAny.apply(this, params);\r\n  }\r\n\r\n  /**\r\n   * \u6DFB\u52A0\u51FD\u6570\u91CD\u8F7D\r\n   * @param {Array} types - \u53C2\u6570\u7C7B\u578B\u5217\u8868\r\n   * @param {Function} fn - \u8981\u8C03\u7528\u7684\u51FD\u6570\r\n   * @returns {Function} \u91CD\u8F7D\u51FD\u6570\r\n   * @throws {TypeError}\r\n   * @throws {Error}\r\n   */\r\n  overload.add = function (types, fn) {\r\n    if (!Array.isArray(types)) throw new TypeError(`\"types\" must be an array.`);\r\n\r\n    if (typeof fn !== \"function\")\r\n      throw new TypeError(`\"fn\" must be a function.`);\r\n\r\n    for (let i = 0; i < types.length; i++) {\r\n      if (types[i] === \"...\" && i !== types.length - 1) {\r\n        throw new Error(`A \"...\" parameter must be the last parameter in a formal parameter list.`);\r\n      }\r\n    }\r\n\r\n    TABLE.size &&\r\n      Array.from(TABLE.keys()).forEach((key) => {\r\n        if (key.length !== types.length) return;\r\n\r\n        for (let i = 0; i < key.length; i++) {\r\n          if (key[i] !== types[i]) return;\r\n        }\r\n\r\n        throw new Error(`Function with the same signature already exists.`);\r\n      });\r\n\r\n    types.forEach((type) => {\r\n      const isArray = Array.isArray(type);\r\n      if (typeof type !== \"function\" && !isArray && type !== \"*\" && type !== \"...\") {\r\n        throw new Error(`The expected type must be Class, Array, \"*\" or the last parameter type can also be \"...\".`);\r\n      }\r\n\r\n      if (isArray) {\r\n        for (let i = 0; i < type.length; i++) {\r\n          if (\r\n            typeof type[i] !== \"function\" &&\r\n            type[i] !== null &&\r\n            type[i] !== \"*\"\r\n          ) {\r\n            throw new Error(\r\n              `The predetermined type enumeration content must be a Class, null or \"*\".`\r\n            );\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    TABLE.set(types, fn);\r\n\r\n    return overload;\r\n  };\r\n\r\n  /**\r\n   * \u8BBE\u7F6E\u515C\u5E95\u51FD\u6570\r\n   * @param {Function} fn - \u515C\u5E95\u51FD\u6570\r\n   * @returns {Function} \u91CD\u8F7D\u51FD\u6570\r\n   * @throws {TypeError}\r\n   * @throws {Error}\r\n   */\r\n  overload.any = function (fn) {\r\n    if (typeof fn !== \"function\")\r\n      throw new TypeError(`\"fn\" must be a function.`);\r\n\r\n    if (anyFn) throw new Error(`\"any\" function is already defined.`);\r\n\r\n    anyFn = fn;\r\n\r\n    return overload;\r\n  };\r\n\r\n  if (Array.isArray(defaultTypes) && typeof defaultFn === \"function\")\r\n    overload.add(defaultTypes, defaultFn);\r\n  else if (defaultTypes || defaultFn)\r\n    throw new TypeError(`\"defaultTypes\" must be an array and \"defaultFn\" must be a function.`);\r\n\r\n  return overload;\r\n}\r\n", "import overload from \"@jyostudio/overload\";\r\n\r\nexport default class Enum {\r\n    #value;\r\n\r\n    #description = \"\";\r\n\r\n    get description() {\r\n        return this.#description;\r\n    }\r\n\r\n    get valNumber() {\r\n        return Number(this.#value);\r\n    }\r\n\r\n    get valString() {\r\n        return \"\" + (this.#value || \"\");\r\n    }\r\n\r\n    get valBoolean() {\r\n        return !!this.#value;\r\n    }\r\n\r\n    get valObject() {\r\n        return Object(this.#value);\r\n    }\r\n\r\n    static #_constructor = function (...params) {\r\n        Enum.#_constructor = overload()\r\n            .add([],\r\n                /**\r\n                 * @this {Enum}\r\n                 */\r\n                function () {\r\n                    this.#value = Symbol();\r\n                })\r\n            .add([Enum],\r\n                /**\r\n                 * @this {Enum}\r\n                 * @param {Enum} value - \u679A\u4E3E\u5BF9\u8C61\r\n                 */\r\n                function (value) {\r\n                    this.#value = value.#value;\r\n                })\r\n            .add([\"*\"],\r\n                /**\r\n                 * @this {Enum}\r\n                 * @param {*} value - \u679A\u4E3E\u503C\r\n                 */\r\n                function (value) {\r\n                    this.#value = value;\r\n                })\r\n            .add([Enum, String],\r\n                /**\r\n                 * @this {Enum}\r\n                 * @param {Enum} value - \u679A\u4E3E\u5BF9\u8C61\r\n                 * @param {String} description - \u63CF\u8FF0\r\n                 */\r\n                function (value, description) {\r\n                    this.#value = value.#value;\r\n                    this.#description = description;\r\n                })\r\n            .add([\"*\", String],\r\n                /**\r\n                 * @this {Enum}\r\n                 * @param {*} value - \u679A\u4E3E\u503C\r\n                 * @param {String} description - \u63CF\u8FF0\r\n                 */\r\n                function (value, description) {\r\n                    this.#value = value;\r\n                    this.#description = description;\r\n                });\r\n\r\n        return Enum.#_constructor.apply(this, params);\r\n    };\r\n\r\n    constructor(...params) {\r\n        return Enum.#_constructor.apply(this, params);\r\n    }\r\n\r\n    [Symbol.iterator] = function* () {\r\n        yield this.#value;\r\n    };\r\n\r\n    static getAll(...params) {\r\n        Enum.getAll = overload()\r\n            .add([], function () {\r\n                const list = [];\r\n                const allNames = Object.getOwnPropertyNames(this);\r\n\r\n                for (let i = 0; i < allNames.length; i++) {\r\n                    if (allNames[i] === \"prototype\") continue;\r\n\r\n                    const p = this[allNames[i]];\r\n                    if (typeof p === \"object\" && p instanceof Enum) list.push(p);\r\n                }\r\n\r\n                return list;\r\n            });\r\n\r\n        return Enum.getAll.apply(this, params);\r\n    }\r\n\r\n    static getByValue(...params) {\r\n        /**\r\n         * @this {typeof Enum}\r\n         * @param {*} value - \u679A\u4E3E\u503C\r\n         * @param {String} typeConvter - \u7C7B\u578B\u8F6C\u6362\u5668\r\n         * @returns {Enum | null}\r\n         */\r\n        const getFn = (value, typeConvter) => {\r\n            const allEnum = this.getAll();\r\n            for (let i = allEnum.length; i--;) {\r\n                if (allEnum[i][typeConvter] === value) return allEnum[i];\r\n            }\r\n\r\n            return null;\r\n        };\r\n\r\n        Enum.getByValue = overload()\r\n            .add([Number], function (value) {\r\n                return getFn(value, \"valNumber\");\r\n            })\r\n            .add([String], function (value) {\r\n                return getFn(value, \"valString\");\r\n            })\r\n            .add([Boolean], function (value) {\r\n                return getFn(value, \"valBoolean\");\r\n            })\r\n            .add([Enum], function (value) {\r\n                return this.getByValue(value.valNumber);\r\n            })\r\n            .add([Object], function (value) {\r\n                return getFn(value, \"valObject\");\r\n            });\r\n\r\n        return Enum.getByValue.apply(this, params);\r\n    }\r\n\r\n    static getByDescription(...params) {\r\n        Enum.getByDescription = overload()\r\n            .add([String],\r\n                /**\r\n                 * @this {typeof Enum}\r\n                 * @param {String} value - \u63CF\u8FF0\r\n                 * @returns {Enum | null}\r\n                 */\r\n                function (value) {\r\n                    let allEnum = this.getAll();\r\n                    for (let i = allEnum.length; i--;) {\r\n                        if (allEnum[i].description === value) return allEnum[i];\r\n                    }\r\n\r\n                    return null;\r\n                });\r\n\r\n        return Enum.getByDescription.apply(this, params);\r\n    }\r\n\r\n    static set(...params) {\r\n        Enum.set = overload()\r\n            .add([Object],\r\n                /**\r\n                 * @this {typeof Enum}\r\n                 * @param {Object} map - \u679A\u4E3E\u8868\r\n                 */\r\n                function (map) {\r\n                    for (const key in map) {\r\n                        const value = new this(map[key], key);\r\n                        Reflect.defineProperty(this, key, {\r\n                            writable: false,\r\n                            enumerable: true,\r\n                            configurable: false,\r\n                            value\r\n                        });\r\n                    }\r\n\r\n                    Object.freeze(this);\r\n                });\r\n\r\n        return Enum.set.apply(this, params);\r\n    }\r\n\r\n    valueOf() {\r\n        return this.#value;\r\n    }\r\n}\r\n"],
  "mappings": "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",
  "names": ["TYPE_NAMES", "INNER_TYPE_FATHER", "INNER_TYPE_SON", "matchType", "param", "type", "i", "getTypeName", "paramType", "className", "v", "overload_default", "defaultTypes", "defaultFn", "TABLE", "anyFn", "runAny", "args", "throwStackInfo", "err", "stackList", "errorMessage", "formattedStack", "errorMethodName", "stackLine", "index", "arr", "parts", "fullMethodName", "methodName", "matchingTypes", "types", "hasError", "expectedType", "expectedTypeNames", "overload", "params", "SAME_LENGTH_MATCH", "loop", "j", "fn", "key", "isArray", "Enum", "_Enum", "#value", "#description", "#_constructor", "params", "overload_default", "value", "description", "list", "allNames", "i", "p", "getFn", "typeConvter", "allEnum", "map", "key"]
}
